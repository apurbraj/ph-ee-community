kong:
  enabled: true
  image:
    repository: revomatico/docker-kong-oidc
    tag: "latest"
  env:
    plugins: "bundled,oidc"
  admin:
    enabled: true
    http:
      enabled: true
    tls:
      enabled: false
    ingress:
      enabled: false
      ingressClassName: "kong"
      hostname: kong-admin.sandbox.fynarfin.io
  extraObjects:
    - apiVersion: configuration.konghq.com/v1
      kind: KongClusterPlugin
      metadata:
        name: request-transformer
        annotations:
          kubernetes.io/ingress.class: "kong"
        labels:
          global: "false"
      disabled: false # optionally disable the plugin in Kong
      plugin: request-transformer
      config:
        remove:
          headers:
          - cookie
          - x-id-token
    - apiVersion: configuration.konghq.com/v1
      kind: KongClusterPlugin
      metadata:
        name: cors
        annotations:
          kubernetes.io/ingress.class: "kong"
        labels:
          global: "true"    
      disabled: false # optionally disable the plugin in Kong
      plugin: cors
      config: 
        origins: 
          - "*"
        credentials: true
        max_age: 3600
        exposed_headers : 
          - "X-Auth-Token"
        preflight_continue: false
    - apiVersion: configuration.konghq.com/v1
      kind: KongClusterPlugin
      metadata:
        name: oidc
        annotations:
          kubernetes.io/ingress.class: "kong"
        labels:
          global: "false"
      disabled: false # optionally disable the plugin in Kong
      plugin: oidc
      config: # configuration for the plugin
        client_id: kong-oidc 
        client_secret: xxxxxxxx  # Generated on keyCloak
        realm: kong
        discovery: https://keycloak.localhost/auth/realms/kong-oidc/.well-known/openid-configuration
        scope: openid

keycloak:
  enabled: false
  ingress:
    enabled: true
    ingressClassName: "kong"
    rules:
      - host: 'keycloak.sandbox.fynarfin.io'
        paths:
        - path: /
          pathType: Prefix
    tls: []
  postgresql:
    # If `true`, the Postgresql dependency is enabled
    enabled: true
    nameOverride: keycloak-postgresql
    # PostgreSQL User to create
    postgresqlUsername: keycloak
    # PostgreSQL Password for the new user
    postgresqlPassword: keycloak
    # PostgreSQL Database to create
    postgresqlDatabase: keycloak
    # PostgreSQL network policy configuration
    networkPolicy:
      enabled: false